<?xml version="1.0" encoding="utf-8" ?>
<!--
The code in the first procedure does not programmatically identify any trace listeners or filters. 
The code alone results in the trace messages being written to the default trace listener. 
To configure specific trace listeners and their associated filters, edit the configuration file that corresponds to the name of your application. 
In this file, you can add or remove a listener, set the properties and filter for a listener, or remove listeners. 
The following configuration file example shows how to initialize a console trace listener and a text writer trace listener for the trace source that is created in the preceding procedure. 
In addition to configuring the trace listeners, the configuration file creates filters for both of the listeners and creates a source switch for the trace source. 
Two techniques are shown for adding trace listeners: adding the listener directly to the trace source and adding a listener to the shared listeners collection and then adding it by name to the trace source. 
The filters identified for the two listeners are initialized with different source levels. This results in some messages being written by only one of the two listeners.
-->
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.diagnostics>
    <sources>
      <source name="TraceSourceApp"
        switchName="debug"
        switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="console"
            type="System.Diagnostics.ConsoleTraceListener">
            <filter type="System.Diagnostics.EventTypeFilter"
              initializeData="Warning"/>
          </add>
          <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="myListener.xml" />
          <add name="csv" type="System.Diagnostics.DelimitedListTraceListener" initializeData="myListener.csv" delimiter="," traceOutputOptions="ProcessId, DateTime" />
          <add name="myListener"/>
          <remove name="Default"/>
          <!-- 
            A DefaultTraceListener emits Write and WriteLine messages to the OutputDebugString and to the Debugger.Log method. In Visual Studio, 
            this causes the debugging messages to appear in the Output window. Fail and failed Assert messages also emit to the OutputDebugString Windows API and the Debugger.Log method, 
            and also cause a message box to be displayed. This behavior is the default behavior for Debug and Trace messages, because DefaultTraceListener 
            is automatically included in every Listeners collection and is the only listener automatically included.
          -->
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="debug" value="Verbose"/>
      <add name="release" value="Warning"/>
      <add name="none" value="Off"/>
    </switches>
    <sharedListeners>
      <add name="myListener"
        type="System.Diagnostics.TextWriterTraceListener"
        initializeData="myListener.log">
        <filter type="System.Diagnostics.EventTypeFilter"
          initializeData="Error"/>
      </add>
    </sharedListeners>
  </system.diagnostics>
</configuration>